
// TODO: As a Service, I need to authenticate access, so that I can ensure only users who have permission to access the tool are allowed through.
// TODO: As a service, I need to provision access for new users, so they can access Coffee House without requesting access.
// TODO: As a Service, I need to remove/hide disabled accounts from AWS so that areas dependent on an up to date employee list are accurate.














NOT MVP!!!
// TODO: As a Coffee House Administrator/Owner, I need the ability to define the Title for the new instance of Coffee House, so that I can help provide distinction between multiple instances of Coffee House in our environment.
// TODO: As a Coffee House Admin/Owner, I need the ability to define the color scheme for the new instance, so that I can help distinguish the different instances of Coffee House in our environment.
// TODO: As a Coffee House Administrator/Owner, I need the ability to create a new instance of Coffee House, so that I can utilize the tool for a different audience and owner(s).
// TODO: Admin Section: Administrator area of Coffee House to define owners, create instances, alter title or color
// TODO: As a Coffee House Administrator, I need the ability to define/modify the Coffee House owner, so that I can ensure questions are being reviewed/answered by specific people.
// TODO: As an Administrator, I need the ability to alter the title of Coffee House, so that it can be relevant to the scope/needs of the community supporting the tool.
// TODO: As an Administrator, I need the ability to adjust the color scheme of Coffee House, so that I can help the tool stand out from other instances of Coffee House.
// TODO: As an administrator, I need the ability to define Owners for the new instance, so that the owners can answer questions for the new instance.
// TODO: As a user, I need the ability to see all instances of Coffee House, so that I can participate in other instances relative to me.
// TODO: As a user, I need the ability to subscribe to Coffee House instances, so that I can pin multiple instances that I want to keep up to date with.
// TODO: As a user, I should be able to browse other instances of Coffee House

// TODO: clean up code and create tests.
// TODO: Add error bouriies


We need the questions to be restructured. When deligated, they are cagorized as unanswered and stay at the top. Once answered, they are closed/locked. A question can then be reopened by a user. This then puts a link to the old question and a 'RE: [old title]' in the new question. It acts then like a new question since it is. The  

-- SYSTEM --

  - AUTHENTICATION -
    Ln2: Hook up authentication through Okta, but try to keep it as modular as possible 
    Ln3: We need an automated way for allowing access of new users. Based off of azure AD/Graph or perhaps workday?
    Extra: Create a .env file which has all the info on who the Coffee House owner is, acceptable login info, database info, and data on delegating.

  - AWS -
    Ln4: I dont see why this would be an issue. Why would there be anything in AWS dependent on up-to-date employee lists? Authentication and azure AD should handle everything for us.
    Ln15: Need to structure the question data to include an array of responders.

-- FRONT-END --
  Ln2: Add in a login button along with the avatar pic.


